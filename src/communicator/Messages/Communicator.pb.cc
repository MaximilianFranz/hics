// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Communicator.proto

#include "Communicator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class LabelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Label>
      _instance;
} _Label_default_instance_;
class NetInfoMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetInfoMessage>
      _instance;
} _NetInfoMessage_default_instance_;
class PlatformInfoMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlatformInfoMessage>
      _instance;
} _PlatformInfoMessage_default_instance_;
class ImageWrapperMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageWrapperMessage>
      _instance;
} _ImageWrapperMessage_default_instance_;
class PlatformDistributionMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlatformDistributionMessage>
      _instance;
} _PlatformDistributionMessage_default_instance_;
class ImageResultMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageResultMessage>
      _instance;
} _ImageResultMessage_default_instance_;
class ClassifyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClassifyRequest>
      _instance;
} _ClassifyRequest_default_instance_;
class ClassifyReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClassifyReply>
      _instance;
} _ClassifyReply_default_instance_;
namespace protobuf_Communicator_2eproto {
void InitDefaultsLabelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Label_default_instance_;
    new (ptr) ::Label();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Label::InitAsDefaultInstance();
}

void InitDefaultsLabel() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLabelImpl);
}

void InitDefaultsNetInfoMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_NetInfoMessage_default_instance_;
    new (ptr) ::NetInfoMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NetInfoMessage::InitAsDefaultInstance();
}

void InitDefaultsNetInfoMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNetInfoMessageImpl);
}

void InitDefaultsPlatformInfoMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlatformInfoMessage_default_instance_;
    new (ptr) ::PlatformInfoMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlatformInfoMessage::InitAsDefaultInstance();
}

void InitDefaultsPlatformInfoMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlatformInfoMessageImpl);
}

void InitDefaultsImageWrapperMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ImageWrapperMessage_default_instance_;
    new (ptr) ::ImageWrapperMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageWrapperMessage::InitAsDefaultInstance();
}

void InitDefaultsImageWrapperMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageWrapperMessageImpl);
}

void InitDefaultsPlatformDistributionMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Communicator_2eproto::InitDefaultsPlatformInfoMessage();
  {
    void* ptr = &::_PlatformDistributionMessage_default_instance_;
    new (ptr) ::PlatformDistributionMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlatformDistributionMessage::InitAsDefaultInstance();
}

void InitDefaultsPlatformDistributionMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlatformDistributionMessageImpl);
}

void InitDefaultsImageResultMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Communicator_2eproto::InitDefaultsImageWrapperMessage();
  protobuf_Communicator_2eproto::InitDefaultsLabel();
  protobuf_Communicator_2eproto::InitDefaultsPlatformDistributionMessage();
  {
    void* ptr = &::_ImageResultMessage_default_instance_;
    new (ptr) ::ImageResultMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageResultMessage::InitAsDefaultInstance();
}

void InitDefaultsImageResultMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageResultMessageImpl);
}

void InitDefaultsClassifyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Communicator_2eproto::InitDefaultsNetInfoMessage();
  protobuf_Communicator_2eproto::InitDefaultsImageWrapperMessage();
  protobuf_Communicator_2eproto::InitDefaultsPlatformInfoMessage();
  {
    void* ptr = &::_ClassifyRequest_default_instance_;
    new (ptr) ::ClassifyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClassifyRequest::InitAsDefaultInstance();
}

void InitDefaultsClassifyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClassifyRequestImpl);
}

void InitDefaultsClassifyReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Communicator_2eproto::InitDefaultsImageResultMessage();
  {
    void* ptr = &::_ClassifyReply_default_instance_;
    new (ptr) ::ClassifyReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClassifyReply::InitAsDefaultInstance();
}

void InitDefaultsClassifyReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClassifyReplyImpl);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Label, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Label, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Label, probability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetInfoMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetInfoMessage, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetInfoMessage, imagedimension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NetInfoMessage, identifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatformInfoMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatformInfoMessage, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatformInfoMessage, platformid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatformInfoMessage, powerconsumption_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatformInfoMessage, flops_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageWrapperMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageWrapperMessage, filepath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageWrapperMessage, dimensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageWrapperMessage, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatformDistributionMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatformDistributionMessage, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlatformDistributionMessage, usage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageResultMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageResultMessage, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageResultMessage, classification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageResultMessage, platformdistribution_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClassifyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClassifyRequest, net_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClassifyRequest, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClassifyRequest, selectedplatforms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClassifyReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClassifyReply, results_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Label)},
  { 7, -1, sizeof(::NetInfoMessage)},
  { 15, -1, sizeof(::PlatformInfoMessage)},
  { 24, -1, sizeof(::ImageWrapperMessage)},
  { 32, -1, sizeof(::PlatformDistributionMessage)},
  { 39, -1, sizeof(::ImageResultMessage)},
  { 47, -1, sizeof(::ClassifyRequest)},
  { 55, -1, sizeof(::ClassifyReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Label_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_NetInfoMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlatformInfoMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ImageWrapperMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlatformDistributionMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ImageResultMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClassifyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClassifyReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Communicator.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022Communicator.proto\"*\n\005Label\022\014\n\004name\030\001 "
      "\001(\t\022\023\n\013probability\030\002 \001(\002\"J\n\016NetInfoMessa"
      "ge\022\014\n\004name\030\001 \001(\t\022\026\n\016imageDimension\030\002 \001(\005"
      "\022\022\n\nidentifier\030\003 \001(\t\"\223\001\n\023PlatformInfoMes"
      "sage\022\023\n\013description\030\001 \001(\t\022\022\n\nplatformId\030"
      "\002 \001(\t\022\030\n\020powerConsumption\030\003 \001(\005\022\r\n\005flops"
      "\030\004 \001(\005\"*\n\014platformType\022\007\n\003CPU\020\000\022\010\n\004FPGA\020"
      "\001\022\007\n\003GPU\020\002\"I\n\023ImageWrapperMessage\022\020\n\010fil"
      "epath\030\001 \001(\t\022\022\n\ndimensions\030\002 \003(\005\022\014\n\004data\030"
      "\003 \003(\002\"T\n\033PlatformDistributionMessage\022&\n\010"
      "platform\030\001 \001(\0132\024.PlatformInfoMessage\022\r\n\005"
      "usage\030\002 \001(\002\"\226\001\n\022ImageResultMessage\022$\n\006im"
      "ages\030\001 \001(\0132\024.ImageWrapperMessage\022\036\n\016clas"
      "sification\030\002 \003(\0132\006.Label\022:\n\024platformDist"
      "ribution\030\003 \003(\0132\034.PlatformDistributionMes"
      "sage\"\311\001\n\017ClassifyRequest\022\034\n\003net\030\001 \001(\0132\017."
      "NetInfoMessage\022$\n\006images\030\002 \003(\0132\024.ImageWr"
      "apperMessage\022/\n\021selectedPlatforms\030\003 \003(\0132"
      "\024.PlatformInfoMessage\"A\n\roperationMode\022\r"
      "\n\tHighPower\020\000\022\014\n\010LowPower\020\001\022\023\n\017EnergyEff"
      "icient\020\002\"5\n\rClassifyReply\022$\n\007results\030\001 \003"
      "(\0132\023.ImageResultMessage2>\n\014Communicator\022"
      ".\n\010classify\022\020.ClassifyRequest\032\016.Classify"
      "Reply\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 935);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Communicator.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Communicator_2eproto
const ::google::protobuf::EnumDescriptor* PlatformInfoMessage_platformType_descriptor() {
  protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Communicator_2eproto::file_level_enum_descriptors[0];
}
bool PlatformInfoMessage_platformType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlatformInfoMessage_platformType PlatformInfoMessage::CPU;
const PlatformInfoMessage_platformType PlatformInfoMessage::FPGA;
const PlatformInfoMessage_platformType PlatformInfoMessage::GPU;
const PlatformInfoMessage_platformType PlatformInfoMessage::platformType_MIN;
const PlatformInfoMessage_platformType PlatformInfoMessage::platformType_MAX;
const int PlatformInfoMessage::platformType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClassifyRequest_operationMode_descriptor() {
  protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Communicator_2eproto::file_level_enum_descriptors[1];
}
bool ClassifyRequest_operationMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClassifyRequest_operationMode ClassifyRequest::HighPower;
const ClassifyRequest_operationMode ClassifyRequest::LowPower;
const ClassifyRequest_operationMode ClassifyRequest::EnergyEfficient;
const ClassifyRequest_operationMode ClassifyRequest::operationMode_MIN;
const ClassifyRequest_operationMode ClassifyRequest::operationMode_MAX;
const int ClassifyRequest::operationMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Label::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Label::kNameFieldNumber;
const int Label::kProbabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Label::Label()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Communicator_2eproto::InitDefaultsLabel();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Label)
}
Label::Label(const Label& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  probability_ = from.probability_;
  // @@protoc_insertion_point(copy_constructor:Label)
}

void Label::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  probability_ = 0;
  _cached_size_ = 0;
}

Label::~Label() {
  // @@protoc_insertion_point(destructor:Label)
  SharedDtor();
}

void Label::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Label::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Label::descriptor() {
  ::protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Label& Label::default_instance() {
  ::protobuf_Communicator_2eproto::InitDefaultsLabel();
  return *internal_default_instance();
}

Label* Label::New(::google::protobuf::Arena* arena) const {
  Label* n = new Label;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Label::Clear() {
// @@protoc_insertion_point(message_clear_start:Label)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  probability_ = 0;
  _internal_metadata_.Clear();
}

bool Label::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Label)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Label.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float probability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Label)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Label)
  return false;
#undef DO_
}

void Label::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Label)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Label.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // float probability = 2;
  if (this->probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->probability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Label)
}

::google::protobuf::uint8* Label::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Label)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Label.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // float probability = 2;
  if (this->probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->probability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Label)
  return target;
}

size_t Label::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Label)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // float probability = 2;
  if (this->probability() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Label::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Label)
  GOOGLE_DCHECK_NE(&from, this);
  const Label* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Label>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Label)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Label)
    MergeFrom(*source);
  }
}

void Label::MergeFrom(const Label& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Label)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.probability() != 0) {
    set_probability(from.probability());
  }
}

void Label::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Label)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Label::CopyFrom(const Label& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Label)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Label::IsInitialized() const {
  return true;
}

void Label::Swap(Label* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Label::InternalSwap(Label* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(probability_, other->probability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Label::GetMetadata() const {
  protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NetInfoMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetInfoMessage::kNameFieldNumber;
const int NetInfoMessage::kImageDimensionFieldNumber;
const int NetInfoMessage::kIdentifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetInfoMessage::NetInfoMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Communicator_2eproto::InitDefaultsNetInfoMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NetInfoMessage)
}
NetInfoMessage::NetInfoMessage(const NetInfoMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identifier().size() > 0) {
    identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifier_);
  }
  imagedimension_ = from.imagedimension_;
  // @@protoc_insertion_point(copy_constructor:NetInfoMessage)
}

void NetInfoMessage::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagedimension_ = 0;
  _cached_size_ = 0;
}

NetInfoMessage::~NetInfoMessage() {
  // @@protoc_insertion_point(destructor:NetInfoMessage)
  SharedDtor();
}

void NetInfoMessage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NetInfoMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetInfoMessage::descriptor() {
  ::protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetInfoMessage& NetInfoMessage::default_instance() {
  ::protobuf_Communicator_2eproto::InitDefaultsNetInfoMessage();
  return *internal_default_instance();
}

NetInfoMessage* NetInfoMessage::New(::google::protobuf::Arena* arena) const {
  NetInfoMessage* n = new NetInfoMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetInfoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:NetInfoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagedimension_ = 0;
  _internal_metadata_.Clear();
}

bool NetInfoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NetInfoMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetInfoMessage.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 imageDimension = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &imagedimension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identifier = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identifier().data(), static_cast<int>(this->identifier().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NetInfoMessage.identifier"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NetInfoMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NetInfoMessage)
  return false;
#undef DO_
}

void NetInfoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NetInfoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetInfoMessage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 imageDimension = 2;
  if (this->imagedimension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->imagedimension(), output);
  }

  // string identifier = 3;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), static_cast<int>(this->identifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetInfoMessage.identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->identifier(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NetInfoMessage)
}

::google::protobuf::uint8* NetInfoMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NetInfoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetInfoMessage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 imageDimension = 2;
  if (this->imagedimension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->imagedimension(), target);
  }

  // string identifier = 3;
  if (this->identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), static_cast<int>(this->identifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NetInfoMessage.identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->identifier(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetInfoMessage)
  return target;
}

size_t NetInfoMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetInfoMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string identifier = 3;
  if (this->identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identifier());
  }

  // int32 imageDimension = 2;
  if (this->imagedimension() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->imagedimension());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetInfoMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NetInfoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const NetInfoMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetInfoMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NetInfoMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NetInfoMessage)
    MergeFrom(*source);
  }
}

void NetInfoMessage::MergeFrom(const NetInfoMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NetInfoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.identifier().size() > 0) {

    identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identifier_);
  }
  if (from.imagedimension() != 0) {
    set_imagedimension(from.imagedimension());
  }
}

void NetInfoMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NetInfoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetInfoMessage::CopyFrom(const NetInfoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetInfoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetInfoMessage::IsInitialized() const {
  return true;
}

void NetInfoMessage::Swap(NetInfoMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetInfoMessage::InternalSwap(NetInfoMessage* other) {
  using std::swap;
  name_.Swap(&other->name_);
  identifier_.Swap(&other->identifier_);
  swap(imagedimension_, other->imagedimension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetInfoMessage::GetMetadata() const {
  protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlatformInfoMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlatformInfoMessage::kDescriptionFieldNumber;
const int PlatformInfoMessage::kPlatformIdFieldNumber;
const int PlatformInfoMessage::kPowerConsumptionFieldNumber;
const int PlatformInfoMessage::kFlopsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformInfoMessage::PlatformInfoMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Communicator_2eproto::InitDefaultsPlatformInfoMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlatformInfoMessage)
}
PlatformInfoMessage::PlatformInfoMessage(const PlatformInfoMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platformid().size() > 0) {
    platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
  }
  ::memcpy(&powerconsumption_, &from.powerconsumption_,
    static_cast<size_t>(reinterpret_cast<char*>(&flops_) -
    reinterpret_cast<char*>(&powerconsumption_)) + sizeof(flops_));
  // @@protoc_insertion_point(copy_constructor:PlatformInfoMessage)
}

void PlatformInfoMessage::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&powerconsumption_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flops_) -
      reinterpret_cast<char*>(&powerconsumption_)) + sizeof(flops_));
  _cached_size_ = 0;
}

PlatformInfoMessage::~PlatformInfoMessage() {
  // @@protoc_insertion_point(destructor:PlatformInfoMessage)
  SharedDtor();
}

void PlatformInfoMessage::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlatformInfoMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatformInfoMessage::descriptor() {
  ::protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlatformInfoMessage& PlatformInfoMessage::default_instance() {
  ::protobuf_Communicator_2eproto::InitDefaultsPlatformInfoMessage();
  return *internal_default_instance();
}

PlatformInfoMessage* PlatformInfoMessage::New(::google::protobuf::Arena* arena) const {
  PlatformInfoMessage* n = new PlatformInfoMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlatformInfoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:PlatformInfoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platformid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&powerconsumption_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flops_) -
      reinterpret_cast<char*>(&powerconsumption_)) + sizeof(flops_));
  _internal_metadata_.Clear();
}

bool PlatformInfoMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlatformInfoMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlatformInfoMessage.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platformId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platformid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platformid().data(), static_cast<int>(this->platformid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlatformInfoMessage.platformId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 powerConsumption = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &powerconsumption_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 flops = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flops_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlatformInfoMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlatformInfoMessage)
  return false;
#undef DO_
}

void PlatformInfoMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlatformInfoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatformInfoMessage.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->description(), output);
  }

  // string platformId = 2;
  if (this->platformid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatformInfoMessage.platformId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->platformid(), output);
  }

  // int32 powerConsumption = 3;
  if (this->powerconsumption() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->powerconsumption(), output);
  }

  // int32 flops = 4;
  if (this->flops() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->flops(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PlatformInfoMessage)
}

::google::protobuf::uint8* PlatformInfoMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlatformInfoMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatformInfoMessage.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->description(), target);
  }

  // string platformId = 2;
  if (this->platformid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platformid().data(), static_cast<int>(this->platformid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlatformInfoMessage.platformId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->platformid(), target);
  }

  // int32 powerConsumption = 3;
  if (this->powerconsumption() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->powerconsumption(), target);
  }

  // int32 flops = 4;
  if (this->flops() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->flops(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlatformInfoMessage)
  return target;
}

size_t PlatformInfoMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlatformInfoMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 1;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string platformId = 2;
  if (this->platformid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platformid());
  }

  // int32 powerConsumption = 3;
  if (this->powerconsumption() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->powerconsumption());
  }

  // int32 flops = 4;
  if (this->flops() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flops());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatformInfoMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlatformInfoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformInfoMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlatformInfoMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlatformInfoMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlatformInfoMessage)
    MergeFrom(*source);
  }
}

void PlatformInfoMessage::MergeFrom(const PlatformInfoMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlatformInfoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.platformid().size() > 0) {

    platformid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platformid_);
  }
  if (from.powerconsumption() != 0) {
    set_powerconsumption(from.powerconsumption());
  }
  if (from.flops() != 0) {
    set_flops(from.flops());
  }
}

void PlatformInfoMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlatformInfoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformInfoMessage::CopyFrom(const PlatformInfoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlatformInfoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformInfoMessage::IsInitialized() const {
  return true;
}

void PlatformInfoMessage::Swap(PlatformInfoMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformInfoMessage::InternalSwap(PlatformInfoMessage* other) {
  using std::swap;
  description_.Swap(&other->description_);
  platformid_.Swap(&other->platformid_);
  swap(powerconsumption_, other->powerconsumption_);
  swap(flops_, other->flops_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlatformInfoMessage::GetMetadata() const {
  protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageWrapperMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageWrapperMessage::kFilepathFieldNumber;
const int ImageWrapperMessage::kDimensionsFieldNumber;
const int ImageWrapperMessage::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageWrapperMessage::ImageWrapperMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Communicator_2eproto::InitDefaultsImageWrapperMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImageWrapperMessage)
}
ImageWrapperMessage::ImageWrapperMessage(const ImageWrapperMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dimensions_(from.dimensions_),
      data_(from.data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filepath().size() > 0) {
    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
  // @@protoc_insertion_point(copy_constructor:ImageWrapperMessage)
}

void ImageWrapperMessage::SharedCtor() {
  filepath_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ImageWrapperMessage::~ImageWrapperMessage() {
  // @@protoc_insertion_point(destructor:ImageWrapperMessage)
  SharedDtor();
}

void ImageWrapperMessage::SharedDtor() {
  filepath_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImageWrapperMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageWrapperMessage::descriptor() {
  ::protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageWrapperMessage& ImageWrapperMessage::default_instance() {
  ::protobuf_Communicator_2eproto::InitDefaultsImageWrapperMessage();
  return *internal_default_instance();
}

ImageWrapperMessage* ImageWrapperMessage::New(::google::protobuf::Arena* arena) const {
  ImageWrapperMessage* n = new ImageWrapperMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageWrapperMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageWrapperMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  data_.Clear();
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ImageWrapperMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImageWrapperMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filepath = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filepath()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filepath().data(), static_cast<int>(this->filepath().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ImageWrapperMessage.filepath"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 dimensions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dimensions())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_dimensions())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImageWrapperMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImageWrapperMessage)
  return false;
#undef DO_
}

void ImageWrapperMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImageWrapperMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filepath = 1;
  if (this->filepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filepath().data(), static_cast<int>(this->filepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageWrapperMessage.filepath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filepath(), output);
  }

  // repeated int32 dimensions = 2;
  if (this->dimensions_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dimensions_cached_byte_size_));
  }
  for (int i = 0, n = this->dimensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->dimensions(i), output);
  }

  // repeated float data = 3;
  if (this->data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _data_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->data().data(), this->data_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImageWrapperMessage)
}

::google::protobuf::uint8* ImageWrapperMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImageWrapperMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filepath = 1;
  if (this->filepath().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filepath().data(), static_cast<int>(this->filepath().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageWrapperMessage.filepath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filepath(), target);
  }

  // repeated int32 dimensions = 2;
  if (this->dimensions_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _dimensions_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->dimensions_, target);
  }

  // repeated float data = 3;
  if (this->data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _data_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->data_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageWrapperMessage)
  return target;
}

size_t ImageWrapperMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageWrapperMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 dimensions = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->dimensions_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dimensions_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float data = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->data_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string filepath = 1;
  if (this->filepath().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filepath());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageWrapperMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageWrapperMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageWrapperMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageWrapperMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageWrapperMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageWrapperMessage)
    MergeFrom(*source);
  }
}

void ImageWrapperMessage::MergeFrom(const ImageWrapperMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageWrapperMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
  data_.MergeFrom(from.data_);
  if (from.filepath().size() > 0) {

    filepath_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filepath_);
  }
}

void ImageWrapperMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageWrapperMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageWrapperMessage::CopyFrom(const ImageWrapperMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageWrapperMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageWrapperMessage::IsInitialized() const {
  return true;
}

void ImageWrapperMessage::Swap(ImageWrapperMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageWrapperMessage::InternalSwap(ImageWrapperMessage* other) {
  using std::swap;
  dimensions_.InternalSwap(&other->dimensions_);
  data_.InternalSwap(&other->data_);
  filepath_.Swap(&other->filepath_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageWrapperMessage::GetMetadata() const {
  protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlatformDistributionMessage::InitAsDefaultInstance() {
  ::_PlatformDistributionMessage_default_instance_._instance.get_mutable()->platform_ = const_cast< ::PlatformInfoMessage*>(
      ::PlatformInfoMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlatformDistributionMessage::kPlatformFieldNumber;
const int PlatformDistributionMessage::kUsageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformDistributionMessage::PlatformDistributionMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Communicator_2eproto::InitDefaultsPlatformDistributionMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlatformDistributionMessage)
}
PlatformDistributionMessage::PlatformDistributionMessage(const PlatformDistributionMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_platform()) {
    platform_ = new ::PlatformInfoMessage(*from.platform_);
  } else {
    platform_ = NULL;
  }
  usage_ = from.usage_;
  // @@protoc_insertion_point(copy_constructor:PlatformDistributionMessage)
}

void PlatformDistributionMessage::SharedCtor() {
  ::memset(&platform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&usage_) -
      reinterpret_cast<char*>(&platform_)) + sizeof(usage_));
  _cached_size_ = 0;
}

PlatformDistributionMessage::~PlatformDistributionMessage() {
  // @@protoc_insertion_point(destructor:PlatformDistributionMessage)
  SharedDtor();
}

void PlatformDistributionMessage::SharedDtor() {
  if (this != internal_default_instance()) delete platform_;
}

void PlatformDistributionMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatformDistributionMessage::descriptor() {
  ::protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlatformDistributionMessage& PlatformDistributionMessage::default_instance() {
  ::protobuf_Communicator_2eproto::InitDefaultsPlatformDistributionMessage();
  return *internal_default_instance();
}

PlatformDistributionMessage* PlatformDistributionMessage::New(::google::protobuf::Arena* arena) const {
  PlatformDistributionMessage* n = new PlatformDistributionMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlatformDistributionMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:PlatformDistributionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && platform_ != NULL) {
    delete platform_;
  }
  platform_ = NULL;
  usage_ = 0;
  _internal_metadata_.Clear();
}

bool PlatformDistributionMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlatformDistributionMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .PlatformInfoMessage platform = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_platform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float usage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &usage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlatformDistributionMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlatformDistributionMessage)
  return false;
#undef DO_
}

void PlatformDistributionMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlatformDistributionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PlatformInfoMessage platform = 1;
  if (this->has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->platform_, output);
  }

  // float usage = 2;
  if (this->usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->usage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PlatformDistributionMessage)
}

::google::protobuf::uint8* PlatformDistributionMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlatformDistributionMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PlatformInfoMessage platform = 1;
  if (this->has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->platform_, deterministic, target);
  }

  // float usage = 2;
  if (this->usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->usage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlatformDistributionMessage)
  return target;
}

size_t PlatformDistributionMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlatformDistributionMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .PlatformInfoMessage platform = 1;
  if (this->has_platform()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->platform_);
  }

  // float usage = 2;
  if (this->usage() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatformDistributionMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlatformDistributionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformDistributionMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlatformDistributionMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlatformDistributionMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlatformDistributionMessage)
    MergeFrom(*source);
  }
}

void PlatformDistributionMessage::MergeFrom(const PlatformDistributionMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlatformDistributionMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_platform()) {
    mutable_platform()->::PlatformInfoMessage::MergeFrom(from.platform());
  }
  if (from.usage() != 0) {
    set_usage(from.usage());
  }
}

void PlatformDistributionMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlatformDistributionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformDistributionMessage::CopyFrom(const PlatformDistributionMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlatformDistributionMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformDistributionMessage::IsInitialized() const {
  return true;
}

void PlatformDistributionMessage::Swap(PlatformDistributionMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformDistributionMessage::InternalSwap(PlatformDistributionMessage* other) {
  using std::swap;
  swap(platform_, other->platform_);
  swap(usage_, other->usage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlatformDistributionMessage::GetMetadata() const {
  protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageResultMessage::InitAsDefaultInstance() {
  ::_ImageResultMessage_default_instance_._instance.get_mutable()->images_ = const_cast< ::ImageWrapperMessage*>(
      ::ImageWrapperMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageResultMessage::kImagesFieldNumber;
const int ImageResultMessage::kClassificationFieldNumber;
const int ImageResultMessage::kPlatformDistributionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageResultMessage::ImageResultMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Communicator_2eproto::InitDefaultsImageResultMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImageResultMessage)
}
ImageResultMessage::ImageResultMessage(const ImageResultMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      classification_(from.classification_),
      platformdistribution_(from.platformdistribution_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_images()) {
    images_ = new ::ImageWrapperMessage(*from.images_);
  } else {
    images_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ImageResultMessage)
}

void ImageResultMessage::SharedCtor() {
  images_ = NULL;
  _cached_size_ = 0;
}

ImageResultMessage::~ImageResultMessage() {
  // @@protoc_insertion_point(destructor:ImageResultMessage)
  SharedDtor();
}

void ImageResultMessage::SharedDtor() {
  if (this != internal_default_instance()) delete images_;
}

void ImageResultMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageResultMessage::descriptor() {
  ::protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageResultMessage& ImageResultMessage::default_instance() {
  ::protobuf_Communicator_2eproto::InitDefaultsImageResultMessage();
  return *internal_default_instance();
}

ImageResultMessage* ImageResultMessage::New(::google::protobuf::Arena* arena) const {
  ImageResultMessage* n = new ImageResultMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageResultMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageResultMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  classification_.Clear();
  platformdistribution_.Clear();
  if (GetArenaNoVirtual() == NULL && images_ != NULL) {
    delete images_;
  }
  images_ = NULL;
  _internal_metadata_.Clear();
}

bool ImageResultMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImageResultMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ImageWrapperMessage images = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Label classification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_classification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PlatformDistributionMessage platformDistribution = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_platformdistribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImageResultMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImageResultMessage)
  return false;
#undef DO_
}

void ImageResultMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImageResultMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ImageWrapperMessage images = 1;
  if (this->has_images()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->images_, output);
  }

  // repeated .Label classification = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->classification_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->classification(static_cast<int>(i)), output);
  }

  // repeated .PlatformDistributionMessage platformDistribution = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->platformdistribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->platformdistribution(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImageResultMessage)
}

::google::protobuf::uint8* ImageResultMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImageResultMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ImageWrapperMessage images = 1;
  if (this->has_images()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->images_, deterministic, target);
  }

  // repeated .Label classification = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->classification_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->classification(static_cast<int>(i)), deterministic, target);
  }

  // repeated .PlatformDistributionMessage platformDistribution = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->platformdistribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->platformdistribution(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageResultMessage)
  return target;
}

size_t ImageResultMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageResultMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Label classification = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->classification_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->classification(static_cast<int>(i)));
    }
  }

  // repeated .PlatformDistributionMessage platformDistribution = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->platformdistribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->platformdistribution(static_cast<int>(i)));
    }
  }

  // .ImageWrapperMessage images = 1;
  if (this->has_images()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->images_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageResultMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageResultMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageResultMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageResultMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageResultMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageResultMessage)
    MergeFrom(*source);
  }
}

void ImageResultMessage::MergeFrom(const ImageResultMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageResultMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  classification_.MergeFrom(from.classification_);
  platformdistribution_.MergeFrom(from.platformdistribution_);
  if (from.has_images()) {
    mutable_images()->::ImageWrapperMessage::MergeFrom(from.images());
  }
}

void ImageResultMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageResultMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageResultMessage::CopyFrom(const ImageResultMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageResultMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageResultMessage::IsInitialized() const {
  return true;
}

void ImageResultMessage::Swap(ImageResultMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageResultMessage::InternalSwap(ImageResultMessage* other) {
  using std::swap;
  classification_.InternalSwap(&other->classification_);
  platformdistribution_.InternalSwap(&other->platformdistribution_);
  swap(images_, other->images_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageResultMessage::GetMetadata() const {
  protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClassifyRequest::InitAsDefaultInstance() {
  ::_ClassifyRequest_default_instance_._instance.get_mutable()->net_ = const_cast< ::NetInfoMessage*>(
      ::NetInfoMessage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassifyRequest::kNetFieldNumber;
const int ClassifyRequest::kImagesFieldNumber;
const int ClassifyRequest::kSelectedPlatformsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassifyRequest::ClassifyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Communicator_2eproto::InitDefaultsClassifyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClassifyRequest)
}
ClassifyRequest::ClassifyRequest(const ClassifyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      images_(from.images_),
      selectedplatforms_(from.selectedplatforms_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_net()) {
    net_ = new ::NetInfoMessage(*from.net_);
  } else {
    net_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ClassifyRequest)
}

void ClassifyRequest::SharedCtor() {
  net_ = NULL;
  _cached_size_ = 0;
}

ClassifyRequest::~ClassifyRequest() {
  // @@protoc_insertion_point(destructor:ClassifyRequest)
  SharedDtor();
}

void ClassifyRequest::SharedDtor() {
  if (this != internal_default_instance()) delete net_;
}

void ClassifyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassifyRequest::descriptor() {
  ::protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassifyRequest& ClassifyRequest::default_instance() {
  ::protobuf_Communicator_2eproto::InitDefaultsClassifyRequest();
  return *internal_default_instance();
}

ClassifyRequest* ClassifyRequest::New(::google::protobuf::Arena* arena) const {
  ClassifyRequest* n = new ClassifyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ClassifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_.Clear();
  selectedplatforms_.Clear();
  if (GetArenaNoVirtual() == NULL && net_ != NULL) {
    delete net_;
  }
  net_ = NULL;
  _internal_metadata_.Clear();
}

bool ClassifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClassifyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NetInfoMessage net = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_net()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ImageWrapperMessage images = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PlatformInfoMessage selectedPlatforms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_selectedplatforms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClassifyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClassifyRequest)
  return false;
#undef DO_
}

void ClassifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClassifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetInfoMessage net = 1;
  if (this->has_net()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->net_, output);
  }

  // repeated .ImageWrapperMessage images = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->images(static_cast<int>(i)), output);
  }

  // repeated .PlatformInfoMessage selectedPlatforms = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selectedplatforms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->selectedplatforms(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClassifyRequest)
}

::google::protobuf::uint8* ClassifyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClassifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NetInfoMessage net = 1;
  if (this->has_net()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->net_, deterministic, target);
  }

  // repeated .ImageWrapperMessage images = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->images(static_cast<int>(i)), deterministic, target);
  }

  // repeated .PlatformInfoMessage selectedPlatforms = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selectedplatforms_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->selectedplatforms(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClassifyRequest)
  return target;
}

size_t ClassifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClassifyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ImageWrapperMessage images = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->images(static_cast<int>(i)));
    }
  }

  // repeated .PlatformInfoMessage selectedPlatforms = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->selectedplatforms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->selectedplatforms(static_cast<int>(i)));
    }
  }

  // .NetInfoMessage net = 1;
  if (this->has_net()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->net_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassifyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClassifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassifyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassifyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClassifyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClassifyRequest)
    MergeFrom(*source);
  }
}

void ClassifyRequest::MergeFrom(const ClassifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClassifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
  selectedplatforms_.MergeFrom(from.selectedplatforms_);
  if (from.has_net()) {
    mutable_net()->::NetInfoMessage::MergeFrom(from.net());
  }
}

void ClassifyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClassifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassifyRequest::CopyFrom(const ClassifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClassifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassifyRequest::IsInitialized() const {
  return true;
}

void ClassifyRequest::Swap(ClassifyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassifyRequest::InternalSwap(ClassifyRequest* other) {
  using std::swap;
  images_.InternalSwap(&other->images_);
  selectedplatforms_.InternalSwap(&other->selectedplatforms_);
  swap(net_, other->net_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassifyRequest::GetMetadata() const {
  protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClassifyReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassifyReply::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassifyReply::ClassifyReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Communicator_2eproto::InitDefaultsClassifyReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClassifyReply)
}
ClassifyReply::ClassifyReply(const ClassifyReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClassifyReply)
}

void ClassifyReply::SharedCtor() {
  _cached_size_ = 0;
}

ClassifyReply::~ClassifyReply() {
  // @@protoc_insertion_point(destructor:ClassifyReply)
  SharedDtor();
}

void ClassifyReply::SharedDtor() {
}

void ClassifyReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassifyReply::descriptor() {
  ::protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassifyReply& ClassifyReply::default_instance() {
  ::protobuf_Communicator_2eproto::InitDefaultsClassifyReply();
  return *internal_default_instance();
}

ClassifyReply* ClassifyReply::New(::google::protobuf::Arena* arena) const {
  ClassifyReply* n = new ClassifyReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassifyReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ClassifyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear();
}

bool ClassifyReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClassifyReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ImageResultMessage results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClassifyReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClassifyReply)
  return false;
#undef DO_
}

void ClassifyReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClassifyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ImageResultMessage results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClassifyReply)
}

::google::protobuf::uint8* ClassifyReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClassifyReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ImageResultMessage results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClassifyReply)
  return target;
}

size_t ClassifyReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClassifyReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ImageResultMessage results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassifyReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClassifyReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassifyReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassifyReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClassifyReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClassifyReply)
    MergeFrom(*source);
  }
}

void ClassifyReply::MergeFrom(const ClassifyReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClassifyReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void ClassifyReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClassifyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassifyReply::CopyFrom(const ClassifyReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClassifyReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassifyReply::IsInitialized() const {
  return true;
}

void ClassifyReply::Swap(ClassifyReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassifyReply::InternalSwap(ClassifyReply* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassifyReply::GetMetadata() const {
  protobuf_Communicator_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Communicator_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
