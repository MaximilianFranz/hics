// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Communicator.proto

#ifndef PROTOBUF_Communicator_2eproto__INCLUDED
#define PROTOBUF_Communicator_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Communicator_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLabelImpl();
void InitDefaultsLabel();
void InitDefaultsNetInfoMessageImpl();
void InitDefaultsNetInfoMessage();
void InitDefaultsPlatformInfoMessageImpl();
void InitDefaultsPlatformInfoMessage();
void InitDefaultsImageWrapperMessageImpl();
void InitDefaultsImageWrapperMessage();
void InitDefaultsPlatformDistributionMessageImpl();
void InitDefaultsPlatformDistributionMessage();
void InitDefaultsImageResultMessageImpl();
void InitDefaultsImageResultMessage();
void InitDefaultsClassifyRequestImpl();
void InitDefaultsClassifyRequest();
void InitDefaultsClassifyReplyImpl();
void InitDefaultsClassifyReply();
inline void InitDefaults() {
  InitDefaultsLabel();
  InitDefaultsNetInfoMessage();
  InitDefaultsPlatformInfoMessage();
  InitDefaultsImageWrapperMessage();
  InitDefaultsPlatformDistributionMessage();
  InitDefaultsImageResultMessage();
  InitDefaultsClassifyRequest();
  InitDefaultsClassifyReply();
}
}  // namespace protobuf_Communicator_2eproto
class ClassifyReply;
class ClassifyReplyDefaultTypeInternal;
extern ClassifyReplyDefaultTypeInternal _ClassifyReply_default_instance_;
class ClassifyRequest;
class ClassifyRequestDefaultTypeInternal;
extern ClassifyRequestDefaultTypeInternal _ClassifyRequest_default_instance_;
class ImageResultMessage;
class ImageResultMessageDefaultTypeInternal;
extern ImageResultMessageDefaultTypeInternal _ImageResultMessage_default_instance_;
class ImageWrapperMessage;
class ImageWrapperMessageDefaultTypeInternal;
extern ImageWrapperMessageDefaultTypeInternal _ImageWrapperMessage_default_instance_;
class Label;
class LabelDefaultTypeInternal;
extern LabelDefaultTypeInternal _Label_default_instance_;
class NetInfoMessage;
class NetInfoMessageDefaultTypeInternal;
extern NetInfoMessageDefaultTypeInternal _NetInfoMessage_default_instance_;
class PlatformDistributionMessage;
class PlatformDistributionMessageDefaultTypeInternal;
extern PlatformDistributionMessageDefaultTypeInternal _PlatformDistributionMessage_default_instance_;
class PlatformInfoMessage;
class PlatformInfoMessageDefaultTypeInternal;
extern PlatformInfoMessageDefaultTypeInternal _PlatformInfoMessage_default_instance_;

enum PlatformInfoMessage_platformType {
  PlatformInfoMessage_platformType_CPU = 0,
  PlatformInfoMessage_platformType_FPGA = 1,
  PlatformInfoMessage_platformType_GPU = 2,
  PlatformInfoMessage_platformType_PlatformInfoMessage_platformType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlatformInfoMessage_platformType_PlatformInfoMessage_platformType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlatformInfoMessage_platformType_IsValid(int value);
const PlatformInfoMessage_platformType PlatformInfoMessage_platformType_platformType_MIN = PlatformInfoMessage_platformType_CPU;
const PlatformInfoMessage_platformType PlatformInfoMessage_platformType_platformType_MAX = PlatformInfoMessage_platformType_GPU;
const int PlatformInfoMessage_platformType_platformType_ARRAYSIZE = PlatformInfoMessage_platformType_platformType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlatformInfoMessage_platformType_descriptor();
inline const ::std::string& PlatformInfoMessage_platformType_Name(PlatformInfoMessage_platformType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlatformInfoMessage_platformType_descriptor(), value);
}
inline bool PlatformInfoMessage_platformType_Parse(
    const ::std::string& name, PlatformInfoMessage_platformType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlatformInfoMessage_platformType>(
    PlatformInfoMessage_platformType_descriptor(), name, value);
}
enum ClassifyRequest_operationMode {
  ClassifyRequest_operationMode_HighPower = 0,
  ClassifyRequest_operationMode_LowPower = 1,
  ClassifyRequest_operationMode_EnergyEfficient = 2,
  ClassifyRequest_operationMode_ClassifyRequest_operationMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClassifyRequest_operationMode_ClassifyRequest_operationMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClassifyRequest_operationMode_IsValid(int value);
const ClassifyRequest_operationMode ClassifyRequest_operationMode_operationMode_MIN = ClassifyRequest_operationMode_HighPower;
const ClassifyRequest_operationMode ClassifyRequest_operationMode_operationMode_MAX = ClassifyRequest_operationMode_EnergyEfficient;
const int ClassifyRequest_operationMode_operationMode_ARRAYSIZE = ClassifyRequest_operationMode_operationMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClassifyRequest_operationMode_descriptor();
inline const ::std::string& ClassifyRequest_operationMode_Name(ClassifyRequest_operationMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClassifyRequest_operationMode_descriptor(), value);
}
inline bool ClassifyRequest_operationMode_Parse(
    const ::std::string& name, ClassifyRequest_operationMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClassifyRequest_operationMode>(
    ClassifyRequest_operationMode_descriptor(), name, value);
}
// ===================================================================

class Label : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Label) */ {
 public:
  Label();
  virtual ~Label();

  Label(const Label& from);

  inline Label& operator=(const Label& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Label(Label&& from) noexcept
    : Label() {
    *this = ::std::move(from);
  }

  inline Label& operator=(Label&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Label& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Label* internal_default_instance() {
    return reinterpret_cast<const Label*>(
               &_Label_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Label* other);
  friend void swap(Label& a, Label& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Label* New() const PROTOBUF_FINAL { return New(NULL); }

  Label* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Label& from);
  void MergeFrom(const Label& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Label* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // float probability = 2;
  void clear_probability();
  static const int kProbabilityFieldNumber = 2;
  float probability() const;
  void set_probability(float value);

  // @@protoc_insertion_point(class_scope:Label)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  float probability_;
  mutable int _cached_size_;
  friend struct ::protobuf_Communicator_2eproto::TableStruct;
  friend void ::protobuf_Communicator_2eproto::InitDefaultsLabelImpl();
};
// -------------------------------------------------------------------

class NetInfoMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetInfoMessage) */ {
 public:
  NetInfoMessage();
  virtual ~NetInfoMessage();

  NetInfoMessage(const NetInfoMessage& from);

  inline NetInfoMessage& operator=(const NetInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NetInfoMessage(NetInfoMessage&& from) noexcept
    : NetInfoMessage() {
    *this = ::std::move(from);
  }

  inline NetInfoMessage& operator=(NetInfoMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NetInfoMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NetInfoMessage* internal_default_instance() {
    return reinterpret_cast<const NetInfoMessage*>(
               &_NetInfoMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(NetInfoMessage* other);
  friend void swap(NetInfoMessage& a, NetInfoMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NetInfoMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  NetInfoMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetInfoMessage& from);
  void MergeFrom(const NetInfoMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetInfoMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string identifier = 3;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 3;
  const ::std::string& identifier() const;
  void set_identifier(const ::std::string& value);
  #if LANG_CXX11
  void set_identifier(::std::string&& value);
  #endif
  void set_identifier(const char* value);
  void set_identifier(const char* value, size_t size);
  ::std::string* mutable_identifier();
  ::std::string* release_identifier();
  void set_allocated_identifier(::std::string* identifier);

  // int32 imageDimension = 2;
  void clear_imagedimension();
  static const int kImageDimensionFieldNumber = 2;
  ::google::protobuf::int32 imagedimension() const;
  void set_imagedimension(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NetInfoMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr identifier_;
  ::google::protobuf::int32 imagedimension_;
  mutable int _cached_size_;
  friend struct ::protobuf_Communicator_2eproto::TableStruct;
  friend void ::protobuf_Communicator_2eproto::InitDefaultsNetInfoMessageImpl();
};
// -------------------------------------------------------------------

class PlatformInfoMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlatformInfoMessage) */ {
 public:
  PlatformInfoMessage();
  virtual ~PlatformInfoMessage();

  PlatformInfoMessage(const PlatformInfoMessage& from);

  inline PlatformInfoMessage& operator=(const PlatformInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformInfoMessage(PlatformInfoMessage&& from) noexcept
    : PlatformInfoMessage() {
    *this = ::std::move(from);
  }

  inline PlatformInfoMessage& operator=(PlatformInfoMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformInfoMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlatformInfoMessage* internal_default_instance() {
    return reinterpret_cast<const PlatformInfoMessage*>(
               &_PlatformInfoMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PlatformInfoMessage* other);
  friend void swap(PlatformInfoMessage& a, PlatformInfoMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformInfoMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformInfoMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformInfoMessage& from);
  void MergeFrom(const PlatformInfoMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformInfoMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlatformInfoMessage_platformType platformType;
  static const platformType CPU =
    PlatformInfoMessage_platformType_CPU;
  static const platformType FPGA =
    PlatformInfoMessage_platformType_FPGA;
  static const platformType GPU =
    PlatformInfoMessage_platformType_GPU;
  static inline bool platformType_IsValid(int value) {
    return PlatformInfoMessage_platformType_IsValid(value);
  }
  static const platformType platformType_MIN =
    PlatformInfoMessage_platformType_platformType_MIN;
  static const platformType platformType_MAX =
    PlatformInfoMessage_platformType_platformType_MAX;
  static const int platformType_ARRAYSIZE =
    PlatformInfoMessage_platformType_platformType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  platformType_descriptor() {
    return PlatformInfoMessage_platformType_descriptor();
  }
  static inline const ::std::string& platformType_Name(platformType value) {
    return PlatformInfoMessage_platformType_Name(value);
  }
  static inline bool platformType_Parse(const ::std::string& name,
      platformType* value) {
    return PlatformInfoMessage_platformType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string description = 1;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string platformId = 2;
  void clear_platformid();
  static const int kPlatformIdFieldNumber = 2;
  const ::std::string& platformid() const;
  void set_platformid(const ::std::string& value);
  #if LANG_CXX11
  void set_platformid(::std::string&& value);
  #endif
  void set_platformid(const char* value);
  void set_platformid(const char* value, size_t size);
  ::std::string* mutable_platformid();
  ::std::string* release_platformid();
  void set_allocated_platformid(::std::string* platformid);

  // int32 powerConsumption = 3;
  void clear_powerconsumption();
  static const int kPowerConsumptionFieldNumber = 3;
  ::google::protobuf::int32 powerconsumption() const;
  void set_powerconsumption(::google::protobuf::int32 value);

  // int32 flops = 4;
  void clear_flops();
  static const int kFlopsFieldNumber = 4;
  ::google::protobuf::int32 flops() const;
  void set_flops(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlatformInfoMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr platformid_;
  ::google::protobuf::int32 powerconsumption_;
  ::google::protobuf::int32 flops_;
  mutable int _cached_size_;
  friend struct ::protobuf_Communicator_2eproto::TableStruct;
  friend void ::protobuf_Communicator_2eproto::InitDefaultsPlatformInfoMessageImpl();
};
// -------------------------------------------------------------------

class ImageWrapperMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ImageWrapperMessage) */ {
 public:
  ImageWrapperMessage();
  virtual ~ImageWrapperMessage();

  ImageWrapperMessage(const ImageWrapperMessage& from);

  inline ImageWrapperMessage& operator=(const ImageWrapperMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageWrapperMessage(ImageWrapperMessage&& from) noexcept
    : ImageWrapperMessage() {
    *this = ::std::move(from);
  }

  inline ImageWrapperMessage& operator=(ImageWrapperMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageWrapperMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageWrapperMessage* internal_default_instance() {
    return reinterpret_cast<const ImageWrapperMessage*>(
               &_ImageWrapperMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ImageWrapperMessage* other);
  friend void swap(ImageWrapperMessage& a, ImageWrapperMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageWrapperMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ImageWrapperMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImageWrapperMessage& from);
  void MergeFrom(const ImageWrapperMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImageWrapperMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 dimensions = 2;
  int dimensions_size() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 2;
  ::google::protobuf::int32 dimensions(int index) const;
  void set_dimensions(int index, ::google::protobuf::int32 value);
  void add_dimensions(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dimensions() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dimensions();

  // repeated float data = 3;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_data();

  // string filepath = 1;
  void clear_filepath();
  static const int kFilepathFieldNumber = 1;
  const ::std::string& filepath() const;
  void set_filepath(const ::std::string& value);
  #if LANG_CXX11
  void set_filepath(::std::string&& value);
  #endif
  void set_filepath(const char* value);
  void set_filepath(const char* value, size_t size);
  ::std::string* mutable_filepath();
  ::std::string* release_filepath();
  void set_allocated_filepath(::std::string* filepath);

  // @@protoc_insertion_point(class_scope:ImageWrapperMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dimensions_;
  mutable int _dimensions_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr filepath_;
  mutable int _cached_size_;
  friend struct ::protobuf_Communicator_2eproto::TableStruct;
  friend void ::protobuf_Communicator_2eproto::InitDefaultsImageWrapperMessageImpl();
};
// -------------------------------------------------------------------

class PlatformDistributionMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlatformDistributionMessage) */ {
 public:
  PlatformDistributionMessage();
  virtual ~PlatformDistributionMessage();

  PlatformDistributionMessage(const PlatformDistributionMessage& from);

  inline PlatformDistributionMessage& operator=(const PlatformDistributionMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformDistributionMessage(PlatformDistributionMessage&& from) noexcept
    : PlatformDistributionMessage() {
    *this = ::std::move(from);
  }

  inline PlatformDistributionMessage& operator=(PlatformDistributionMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformDistributionMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlatformDistributionMessage* internal_default_instance() {
    return reinterpret_cast<const PlatformDistributionMessage*>(
               &_PlatformDistributionMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PlatformDistributionMessage* other);
  friend void swap(PlatformDistributionMessage& a, PlatformDistributionMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformDistributionMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformDistributionMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformDistributionMessage& from);
  void MergeFrom(const PlatformDistributionMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformDistributionMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PlatformInfoMessage platform = 1;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 1;
  const ::PlatformInfoMessage& platform() const;
  ::PlatformInfoMessage* release_platform();
  ::PlatformInfoMessage* mutable_platform();
  void set_allocated_platform(::PlatformInfoMessage* platform);

  // float usage = 2;
  void clear_usage();
  static const int kUsageFieldNumber = 2;
  float usage() const;
  void set_usage(float value);

  // @@protoc_insertion_point(class_scope:PlatformDistributionMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PlatformInfoMessage* platform_;
  float usage_;
  mutable int _cached_size_;
  friend struct ::protobuf_Communicator_2eproto::TableStruct;
  friend void ::protobuf_Communicator_2eproto::InitDefaultsPlatformDistributionMessageImpl();
};
// -------------------------------------------------------------------

class ImageResultMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ImageResultMessage) */ {
 public:
  ImageResultMessage();
  virtual ~ImageResultMessage();

  ImageResultMessage(const ImageResultMessage& from);

  inline ImageResultMessage& operator=(const ImageResultMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageResultMessage(ImageResultMessage&& from) noexcept
    : ImageResultMessage() {
    *this = ::std::move(from);
  }

  inline ImageResultMessage& operator=(ImageResultMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageResultMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageResultMessage* internal_default_instance() {
    return reinterpret_cast<const ImageResultMessage*>(
               &_ImageResultMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ImageResultMessage* other);
  friend void swap(ImageResultMessage& a, ImageResultMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageResultMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ImageResultMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImageResultMessage& from);
  void MergeFrom(const ImageResultMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImageResultMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Label classification = 2;
  int classification_size() const;
  void clear_classification();
  static const int kClassificationFieldNumber = 2;
  const ::Label& classification(int index) const;
  ::Label* mutable_classification(int index);
  ::Label* add_classification();
  ::google::protobuf::RepeatedPtrField< ::Label >*
      mutable_classification();
  const ::google::protobuf::RepeatedPtrField< ::Label >&
      classification() const;

  // repeated .PlatformDistributionMessage platformDistribution = 3;
  int platformdistribution_size() const;
  void clear_platformdistribution();
  static const int kPlatformDistributionFieldNumber = 3;
  const ::PlatformDistributionMessage& platformdistribution(int index) const;
  ::PlatformDistributionMessage* mutable_platformdistribution(int index);
  ::PlatformDistributionMessage* add_platformdistribution();
  ::google::protobuf::RepeatedPtrField< ::PlatformDistributionMessage >*
      mutable_platformdistribution();
  const ::google::protobuf::RepeatedPtrField< ::PlatformDistributionMessage >&
      platformdistribution() const;

  // .ImageWrapperMessage images = 1;
  bool has_images() const;
  void clear_images();
  static const int kImagesFieldNumber = 1;
  const ::ImageWrapperMessage& images() const;
  ::ImageWrapperMessage* release_images();
  ::ImageWrapperMessage* mutable_images();
  void set_allocated_images(::ImageWrapperMessage* images);

  // @@protoc_insertion_point(class_scope:ImageResultMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Label > classification_;
  ::google::protobuf::RepeatedPtrField< ::PlatformDistributionMessage > platformdistribution_;
  ::ImageWrapperMessage* images_;
  mutable int _cached_size_;
  friend struct ::protobuf_Communicator_2eproto::TableStruct;
  friend void ::protobuf_Communicator_2eproto::InitDefaultsImageResultMessageImpl();
};
// -------------------------------------------------------------------

class ClassifyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClassifyRequest) */ {
 public:
  ClassifyRequest();
  virtual ~ClassifyRequest();

  ClassifyRequest(const ClassifyRequest& from);

  inline ClassifyRequest& operator=(const ClassifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassifyRequest(ClassifyRequest&& from) noexcept
    : ClassifyRequest() {
    *this = ::std::move(from);
  }

  inline ClassifyRequest& operator=(ClassifyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassifyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClassifyRequest* internal_default_instance() {
    return reinterpret_cast<const ClassifyRequest*>(
               &_ClassifyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ClassifyRequest* other);
  friend void swap(ClassifyRequest& a, ClassifyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassifyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ClassifyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClassifyRequest& from);
  void MergeFrom(const ClassifyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClassifyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClassifyRequest_operationMode operationMode;
  static const operationMode HighPower =
    ClassifyRequest_operationMode_HighPower;
  static const operationMode LowPower =
    ClassifyRequest_operationMode_LowPower;
  static const operationMode EnergyEfficient =
    ClassifyRequest_operationMode_EnergyEfficient;
  static inline bool operationMode_IsValid(int value) {
    return ClassifyRequest_operationMode_IsValid(value);
  }
  static const operationMode operationMode_MIN =
    ClassifyRequest_operationMode_operationMode_MIN;
  static const operationMode operationMode_MAX =
    ClassifyRequest_operationMode_operationMode_MAX;
  static const int operationMode_ARRAYSIZE =
    ClassifyRequest_operationMode_operationMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  operationMode_descriptor() {
    return ClassifyRequest_operationMode_descriptor();
  }
  static inline const ::std::string& operationMode_Name(operationMode value) {
    return ClassifyRequest_operationMode_Name(value);
  }
  static inline bool operationMode_Parse(const ::std::string& name,
      operationMode* value) {
    return ClassifyRequest_operationMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .ImageWrapperMessage images = 2;
  int images_size() const;
  void clear_images();
  static const int kImagesFieldNumber = 2;
  const ::ImageWrapperMessage& images(int index) const;
  ::ImageWrapperMessage* mutable_images(int index);
  ::ImageWrapperMessage* add_images();
  ::google::protobuf::RepeatedPtrField< ::ImageWrapperMessage >*
      mutable_images();
  const ::google::protobuf::RepeatedPtrField< ::ImageWrapperMessage >&
      images() const;

  // repeated .PlatformInfoMessage selectedPlatforms = 3;
  int selectedplatforms_size() const;
  void clear_selectedplatforms();
  static const int kSelectedPlatformsFieldNumber = 3;
  const ::PlatformInfoMessage& selectedplatforms(int index) const;
  ::PlatformInfoMessage* mutable_selectedplatforms(int index);
  ::PlatformInfoMessage* add_selectedplatforms();
  ::google::protobuf::RepeatedPtrField< ::PlatformInfoMessage >*
      mutable_selectedplatforms();
  const ::google::protobuf::RepeatedPtrField< ::PlatformInfoMessage >&
      selectedplatforms() const;

  // .NetInfoMessage net = 1;
  bool has_net() const;
  void clear_net();
  static const int kNetFieldNumber = 1;
  const ::NetInfoMessage& net() const;
  ::NetInfoMessage* release_net();
  ::NetInfoMessage* mutable_net();
  void set_allocated_net(::NetInfoMessage* net);

  // @@protoc_insertion_point(class_scope:ClassifyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ImageWrapperMessage > images_;
  ::google::protobuf::RepeatedPtrField< ::PlatformInfoMessage > selectedplatforms_;
  ::NetInfoMessage* net_;
  mutable int _cached_size_;
  friend struct ::protobuf_Communicator_2eproto::TableStruct;
  friend void ::protobuf_Communicator_2eproto::InitDefaultsClassifyRequestImpl();
};
// -------------------------------------------------------------------

class ClassifyReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClassifyReply) */ {
 public:
  ClassifyReply();
  virtual ~ClassifyReply();

  ClassifyReply(const ClassifyReply& from);

  inline ClassifyReply& operator=(const ClassifyReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClassifyReply(ClassifyReply&& from) noexcept
    : ClassifyReply() {
    *this = ::std::move(from);
  }

  inline ClassifyReply& operator=(ClassifyReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClassifyReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClassifyReply* internal_default_instance() {
    return reinterpret_cast<const ClassifyReply*>(
               &_ClassifyReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ClassifyReply* other);
  friend void swap(ClassifyReply& a, ClassifyReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClassifyReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ClassifyReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClassifyReply& from);
  void MergeFrom(const ClassifyReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClassifyReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ImageResultMessage results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::ImageResultMessage& results(int index) const;
  ::ImageResultMessage* mutable_results(int index);
  ::ImageResultMessage* add_results();
  ::google::protobuf::RepeatedPtrField< ::ImageResultMessage >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::ImageResultMessage >&
      results() const;

  // @@protoc_insertion_point(class_scope:ClassifyReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ImageResultMessage > results_;
  mutable int _cached_size_;
  friend struct ::protobuf_Communicator_2eproto::TableStruct;
  friend void ::protobuf_Communicator_2eproto::InitDefaultsClassifyReplyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Label

// string name = 1;
inline void Label::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Label::name() const {
  // @@protoc_insertion_point(field_get:Label.name)
  return name_.GetNoArena();
}
inline void Label::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Label.name)
}
#if LANG_CXX11
inline void Label::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Label.name)
}
#endif
inline void Label::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Label.name)
}
inline void Label::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Label.name)
}
inline ::std::string* Label::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Label.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Label::release_name() {
  // @@protoc_insertion_point(field_release:Label.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Label::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Label.name)
}

// float probability = 2;
inline void Label::clear_probability() {
  probability_ = 0;
}
inline float Label::probability() const {
  // @@protoc_insertion_point(field_get:Label.probability)
  return probability_;
}
inline void Label::set_probability(float value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:Label.probability)
}

// -------------------------------------------------------------------

// NetInfoMessage

// string name = 1;
inline void NetInfoMessage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NetInfoMessage::name() const {
  // @@protoc_insertion_point(field_get:NetInfoMessage.name)
  return name_.GetNoArena();
}
inline void NetInfoMessage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetInfoMessage.name)
}
#if LANG_CXX11
inline void NetInfoMessage::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetInfoMessage.name)
}
#endif
inline void NetInfoMessage::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetInfoMessage.name)
}
inline void NetInfoMessage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetInfoMessage.name)
}
inline ::std::string* NetInfoMessage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NetInfoMessage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetInfoMessage::release_name() {
  // @@protoc_insertion_point(field_release:NetInfoMessage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetInfoMessage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NetInfoMessage.name)
}

// int32 imageDimension = 2;
inline void NetInfoMessage::clear_imagedimension() {
  imagedimension_ = 0;
}
inline ::google::protobuf::int32 NetInfoMessage::imagedimension() const {
  // @@protoc_insertion_point(field_get:NetInfoMessage.imageDimension)
  return imagedimension_;
}
inline void NetInfoMessage::set_imagedimension(::google::protobuf::int32 value) {
  
  imagedimension_ = value;
  // @@protoc_insertion_point(field_set:NetInfoMessage.imageDimension)
}

// string identifier = 3;
inline void NetInfoMessage::clear_identifier() {
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NetInfoMessage::identifier() const {
  // @@protoc_insertion_point(field_get:NetInfoMessage.identifier)
  return identifier_.GetNoArena();
}
inline void NetInfoMessage::set_identifier(const ::std::string& value) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NetInfoMessage.identifier)
}
#if LANG_CXX11
inline void NetInfoMessage::set_identifier(::std::string&& value) {
  
  identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NetInfoMessage.identifier)
}
#endif
inline void NetInfoMessage::set_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NetInfoMessage.identifier)
}
inline void NetInfoMessage::set_identifier(const char* value, size_t size) {
  
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NetInfoMessage.identifier)
}
inline ::std::string* NetInfoMessage::mutable_identifier() {
  
  // @@protoc_insertion_point(field_mutable:NetInfoMessage.identifier)
  return identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetInfoMessage::release_identifier() {
  // @@protoc_insertion_point(field_release:NetInfoMessage.identifier)
  
  return identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetInfoMessage::set_allocated_identifier(::std::string* identifier) {
  if (identifier != NULL) {
    
  } else {
    
  }
  identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifier);
  // @@protoc_insertion_point(field_set_allocated:NetInfoMessage.identifier)
}

// -------------------------------------------------------------------

// PlatformInfoMessage

// string description = 1;
inline void PlatformInfoMessage::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlatformInfoMessage::description() const {
  // @@protoc_insertion_point(field_get:PlatformInfoMessage.description)
  return description_.GetNoArena();
}
inline void PlatformInfoMessage::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlatformInfoMessage.description)
}
#if LANG_CXX11
inline void PlatformInfoMessage::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlatformInfoMessage.description)
}
#endif
inline void PlatformInfoMessage::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlatformInfoMessage.description)
}
inline void PlatformInfoMessage::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlatformInfoMessage.description)
}
inline ::std::string* PlatformInfoMessage::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:PlatformInfoMessage.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlatformInfoMessage::release_description() {
  // @@protoc_insertion_point(field_release:PlatformInfoMessage.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlatformInfoMessage::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:PlatformInfoMessage.description)
}

// string platformId = 2;
inline void PlatformInfoMessage::clear_platformid() {
  platformid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlatformInfoMessage::platformid() const {
  // @@protoc_insertion_point(field_get:PlatformInfoMessage.platformId)
  return platformid_.GetNoArena();
}
inline void PlatformInfoMessage::set_platformid(const ::std::string& value) {
  
  platformid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlatformInfoMessage.platformId)
}
#if LANG_CXX11
inline void PlatformInfoMessage::set_platformid(::std::string&& value) {
  
  platformid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlatformInfoMessage.platformId)
}
#endif
inline void PlatformInfoMessage::set_platformid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platformid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlatformInfoMessage.platformId)
}
inline void PlatformInfoMessage::set_platformid(const char* value, size_t size) {
  
  platformid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlatformInfoMessage.platformId)
}
inline ::std::string* PlatformInfoMessage::mutable_platformid() {
  
  // @@protoc_insertion_point(field_mutable:PlatformInfoMessage.platformId)
  return platformid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlatformInfoMessage::release_platformid() {
  // @@protoc_insertion_point(field_release:PlatformInfoMessage.platformId)
  
  return platformid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlatformInfoMessage::set_allocated_platformid(::std::string* platformid) {
  if (platformid != NULL) {
    
  } else {
    
  }
  platformid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platformid);
  // @@protoc_insertion_point(field_set_allocated:PlatformInfoMessage.platformId)
}

// int32 powerConsumption = 3;
inline void PlatformInfoMessage::clear_powerconsumption() {
  powerconsumption_ = 0;
}
inline ::google::protobuf::int32 PlatformInfoMessage::powerconsumption() const {
  // @@protoc_insertion_point(field_get:PlatformInfoMessage.powerConsumption)
  return powerconsumption_;
}
inline void PlatformInfoMessage::set_powerconsumption(::google::protobuf::int32 value) {
  
  powerconsumption_ = value;
  // @@protoc_insertion_point(field_set:PlatformInfoMessage.powerConsumption)
}

// int32 flops = 4;
inline void PlatformInfoMessage::clear_flops() {
  flops_ = 0;
}
inline ::google::protobuf::int32 PlatformInfoMessage::flops() const {
  // @@protoc_insertion_point(field_get:PlatformInfoMessage.flops)
  return flops_;
}
inline void PlatformInfoMessage::set_flops(::google::protobuf::int32 value) {
  
  flops_ = value;
  // @@protoc_insertion_point(field_set:PlatformInfoMessage.flops)
}

// -------------------------------------------------------------------

// ImageWrapperMessage

// string filepath = 1;
inline void ImageWrapperMessage::clear_filepath() {
  filepath_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImageWrapperMessage::filepath() const {
  // @@protoc_insertion_point(field_get:ImageWrapperMessage.filepath)
  return filepath_.GetNoArena();
}
inline void ImageWrapperMessage::set_filepath(const ::std::string& value) {
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ImageWrapperMessage.filepath)
}
#if LANG_CXX11
inline void ImageWrapperMessage::set_filepath(::std::string&& value) {
  
  filepath_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ImageWrapperMessage.filepath)
}
#endif
inline void ImageWrapperMessage::set_filepath(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ImageWrapperMessage.filepath)
}
inline void ImageWrapperMessage::set_filepath(const char* value, size_t size) {
  
  filepath_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ImageWrapperMessage.filepath)
}
inline ::std::string* ImageWrapperMessage::mutable_filepath() {
  
  // @@protoc_insertion_point(field_mutable:ImageWrapperMessage.filepath)
  return filepath_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImageWrapperMessage::release_filepath() {
  // @@protoc_insertion_point(field_release:ImageWrapperMessage.filepath)
  
  return filepath_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageWrapperMessage::set_allocated_filepath(::std::string* filepath) {
  if (filepath != NULL) {
    
  } else {
    
  }
  filepath_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filepath);
  // @@protoc_insertion_point(field_set_allocated:ImageWrapperMessage.filepath)
}

// repeated int32 dimensions = 2;
inline int ImageWrapperMessage::dimensions_size() const {
  return dimensions_.size();
}
inline void ImageWrapperMessage::clear_dimensions() {
  dimensions_.Clear();
}
inline ::google::protobuf::int32 ImageWrapperMessage::dimensions(int index) const {
  // @@protoc_insertion_point(field_get:ImageWrapperMessage.dimensions)
  return dimensions_.Get(index);
}
inline void ImageWrapperMessage::set_dimensions(int index, ::google::protobuf::int32 value) {
  dimensions_.Set(index, value);
  // @@protoc_insertion_point(field_set:ImageWrapperMessage.dimensions)
}
inline void ImageWrapperMessage::add_dimensions(::google::protobuf::int32 value) {
  dimensions_.Add(value);
  // @@protoc_insertion_point(field_add:ImageWrapperMessage.dimensions)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ImageWrapperMessage::dimensions() const {
  // @@protoc_insertion_point(field_list:ImageWrapperMessage.dimensions)
  return dimensions_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ImageWrapperMessage::mutable_dimensions() {
  // @@protoc_insertion_point(field_mutable_list:ImageWrapperMessage.dimensions)
  return &dimensions_;
}

// repeated float data = 3;
inline int ImageWrapperMessage::data_size() const {
  return data_.size();
}
inline void ImageWrapperMessage::clear_data() {
  data_.Clear();
}
inline float ImageWrapperMessage::data(int index) const {
  // @@protoc_insertion_point(field_get:ImageWrapperMessage.data)
  return data_.Get(index);
}
inline void ImageWrapperMessage::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ImageWrapperMessage.data)
}
inline void ImageWrapperMessage::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:ImageWrapperMessage.data)
}
inline const ::google::protobuf::RepeatedField< float >&
ImageWrapperMessage::data() const {
  // @@protoc_insertion_point(field_list:ImageWrapperMessage.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< float >*
ImageWrapperMessage::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:ImageWrapperMessage.data)
  return &data_;
}

// -------------------------------------------------------------------

// PlatformDistributionMessage

// .PlatformInfoMessage platform = 1;
inline bool PlatformDistributionMessage::has_platform() const {
  return this != internal_default_instance() && platform_ != NULL;
}
inline void PlatformDistributionMessage::clear_platform() {
  if (GetArenaNoVirtual() == NULL && platform_ != NULL) {
    delete platform_;
  }
  platform_ = NULL;
}
inline const ::PlatformInfoMessage& PlatformDistributionMessage::platform() const {
  const ::PlatformInfoMessage* p = platform_;
  // @@protoc_insertion_point(field_get:PlatformDistributionMessage.platform)
  return p != NULL ? *p : *reinterpret_cast<const ::PlatformInfoMessage*>(
      &::_PlatformInfoMessage_default_instance_);
}
inline ::PlatformInfoMessage* PlatformDistributionMessage::release_platform() {
  // @@protoc_insertion_point(field_release:PlatformDistributionMessage.platform)
  
  ::PlatformInfoMessage* temp = platform_;
  platform_ = NULL;
  return temp;
}
inline ::PlatformInfoMessage* PlatformDistributionMessage::mutable_platform() {
  
  if (platform_ == NULL) {
    platform_ = new ::PlatformInfoMessage;
  }
  // @@protoc_insertion_point(field_mutable:PlatformDistributionMessage.platform)
  return platform_;
}
inline void PlatformDistributionMessage::set_allocated_platform(::PlatformInfoMessage* platform) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete platform_;
  }
  if (platform) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      platform = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, platform, submessage_arena);
    }
    
  } else {
    
  }
  platform_ = platform;
  // @@protoc_insertion_point(field_set_allocated:PlatformDistributionMessage.platform)
}

// float usage = 2;
inline void PlatformDistributionMessage::clear_usage() {
  usage_ = 0;
}
inline float PlatformDistributionMessage::usage() const {
  // @@protoc_insertion_point(field_get:PlatformDistributionMessage.usage)
  return usage_;
}
inline void PlatformDistributionMessage::set_usage(float value) {
  
  usage_ = value;
  // @@protoc_insertion_point(field_set:PlatformDistributionMessage.usage)
}

// -------------------------------------------------------------------

// ImageResultMessage

// .ImageWrapperMessage images = 1;
inline bool ImageResultMessage::has_images() const {
  return this != internal_default_instance() && images_ != NULL;
}
inline void ImageResultMessage::clear_images() {
  if (GetArenaNoVirtual() == NULL && images_ != NULL) {
    delete images_;
  }
  images_ = NULL;
}
inline const ::ImageWrapperMessage& ImageResultMessage::images() const {
  const ::ImageWrapperMessage* p = images_;
  // @@protoc_insertion_point(field_get:ImageResultMessage.images)
  return p != NULL ? *p : *reinterpret_cast<const ::ImageWrapperMessage*>(
      &::_ImageWrapperMessage_default_instance_);
}
inline ::ImageWrapperMessage* ImageResultMessage::release_images() {
  // @@protoc_insertion_point(field_release:ImageResultMessage.images)
  
  ::ImageWrapperMessage* temp = images_;
  images_ = NULL;
  return temp;
}
inline ::ImageWrapperMessage* ImageResultMessage::mutable_images() {
  
  if (images_ == NULL) {
    images_ = new ::ImageWrapperMessage;
  }
  // @@protoc_insertion_point(field_mutable:ImageResultMessage.images)
  return images_;
}
inline void ImageResultMessage::set_allocated_images(::ImageWrapperMessage* images) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete images_;
  }
  if (images) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      images = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, images, submessage_arena);
    }
    
  } else {
    
  }
  images_ = images;
  // @@protoc_insertion_point(field_set_allocated:ImageResultMessage.images)
}

// repeated .Label classification = 2;
inline int ImageResultMessage::classification_size() const {
  return classification_.size();
}
inline void ImageResultMessage::clear_classification() {
  classification_.Clear();
}
inline const ::Label& ImageResultMessage::classification(int index) const {
  // @@protoc_insertion_point(field_get:ImageResultMessage.classification)
  return classification_.Get(index);
}
inline ::Label* ImageResultMessage::mutable_classification(int index) {
  // @@protoc_insertion_point(field_mutable:ImageResultMessage.classification)
  return classification_.Mutable(index);
}
inline ::Label* ImageResultMessage::add_classification() {
  // @@protoc_insertion_point(field_add:ImageResultMessage.classification)
  return classification_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Label >*
ImageResultMessage::mutable_classification() {
  // @@protoc_insertion_point(field_mutable_list:ImageResultMessage.classification)
  return &classification_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Label >&
ImageResultMessage::classification() const {
  // @@protoc_insertion_point(field_list:ImageResultMessage.classification)
  return classification_;
}

// repeated .PlatformDistributionMessage platformDistribution = 3;
inline int ImageResultMessage::platformdistribution_size() const {
  return platformdistribution_.size();
}
inline void ImageResultMessage::clear_platformdistribution() {
  platformdistribution_.Clear();
}
inline const ::PlatformDistributionMessage& ImageResultMessage::platformdistribution(int index) const {
  // @@protoc_insertion_point(field_get:ImageResultMessage.platformDistribution)
  return platformdistribution_.Get(index);
}
inline ::PlatformDistributionMessage* ImageResultMessage::mutable_platformdistribution(int index) {
  // @@protoc_insertion_point(field_mutable:ImageResultMessage.platformDistribution)
  return platformdistribution_.Mutable(index);
}
inline ::PlatformDistributionMessage* ImageResultMessage::add_platformdistribution() {
  // @@protoc_insertion_point(field_add:ImageResultMessage.platformDistribution)
  return platformdistribution_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlatformDistributionMessage >*
ImageResultMessage::mutable_platformdistribution() {
  // @@protoc_insertion_point(field_mutable_list:ImageResultMessage.platformDistribution)
  return &platformdistribution_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlatformDistributionMessage >&
ImageResultMessage::platformdistribution() const {
  // @@protoc_insertion_point(field_list:ImageResultMessage.platformDistribution)
  return platformdistribution_;
}

// -------------------------------------------------------------------

// ClassifyRequest

// .NetInfoMessage net = 1;
inline bool ClassifyRequest::has_net() const {
  return this != internal_default_instance() && net_ != NULL;
}
inline void ClassifyRequest::clear_net() {
  if (GetArenaNoVirtual() == NULL && net_ != NULL) {
    delete net_;
  }
  net_ = NULL;
}
inline const ::NetInfoMessage& ClassifyRequest::net() const {
  const ::NetInfoMessage* p = net_;
  // @@protoc_insertion_point(field_get:ClassifyRequest.net)
  return p != NULL ? *p : *reinterpret_cast<const ::NetInfoMessage*>(
      &::_NetInfoMessage_default_instance_);
}
inline ::NetInfoMessage* ClassifyRequest::release_net() {
  // @@protoc_insertion_point(field_release:ClassifyRequest.net)
  
  ::NetInfoMessage* temp = net_;
  net_ = NULL;
  return temp;
}
inline ::NetInfoMessage* ClassifyRequest::mutable_net() {
  
  if (net_ == NULL) {
    net_ = new ::NetInfoMessage;
  }
  // @@protoc_insertion_point(field_mutable:ClassifyRequest.net)
  return net_;
}
inline void ClassifyRequest::set_allocated_net(::NetInfoMessage* net) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete net_;
  }
  if (net) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      net = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, net, submessage_arena);
    }
    
  } else {
    
  }
  net_ = net;
  // @@protoc_insertion_point(field_set_allocated:ClassifyRequest.net)
}

// repeated .ImageWrapperMessage images = 2;
inline int ClassifyRequest::images_size() const {
  return images_.size();
}
inline void ClassifyRequest::clear_images() {
  images_.Clear();
}
inline const ::ImageWrapperMessage& ClassifyRequest::images(int index) const {
  // @@protoc_insertion_point(field_get:ClassifyRequest.images)
  return images_.Get(index);
}
inline ::ImageWrapperMessage* ClassifyRequest::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:ClassifyRequest.images)
  return images_.Mutable(index);
}
inline ::ImageWrapperMessage* ClassifyRequest::add_images() {
  // @@protoc_insertion_point(field_add:ClassifyRequest.images)
  return images_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ImageWrapperMessage >*
ClassifyRequest::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:ClassifyRequest.images)
  return &images_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ImageWrapperMessage >&
ClassifyRequest::images() const {
  // @@protoc_insertion_point(field_list:ClassifyRequest.images)
  return images_;
}

// repeated .PlatformInfoMessage selectedPlatforms = 3;
inline int ClassifyRequest::selectedplatforms_size() const {
  return selectedplatforms_.size();
}
inline void ClassifyRequest::clear_selectedplatforms() {
  selectedplatforms_.Clear();
}
inline const ::PlatformInfoMessage& ClassifyRequest::selectedplatforms(int index) const {
  // @@protoc_insertion_point(field_get:ClassifyRequest.selectedPlatforms)
  return selectedplatforms_.Get(index);
}
inline ::PlatformInfoMessage* ClassifyRequest::mutable_selectedplatforms(int index) {
  // @@protoc_insertion_point(field_mutable:ClassifyRequest.selectedPlatforms)
  return selectedplatforms_.Mutable(index);
}
inline ::PlatformInfoMessage* ClassifyRequest::add_selectedplatforms() {
  // @@protoc_insertion_point(field_add:ClassifyRequest.selectedPlatforms)
  return selectedplatforms_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlatformInfoMessage >*
ClassifyRequest::mutable_selectedplatforms() {
  // @@protoc_insertion_point(field_mutable_list:ClassifyRequest.selectedPlatforms)
  return &selectedplatforms_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlatformInfoMessage >&
ClassifyRequest::selectedplatforms() const {
  // @@protoc_insertion_point(field_list:ClassifyRequest.selectedPlatforms)
  return selectedplatforms_;
}

// -------------------------------------------------------------------

// ClassifyReply

// repeated .ImageResultMessage results = 1;
inline int ClassifyReply::results_size() const {
  return results_.size();
}
inline void ClassifyReply::clear_results() {
  results_.Clear();
}
inline const ::ImageResultMessage& ClassifyReply::results(int index) const {
  // @@protoc_insertion_point(field_get:ClassifyReply.results)
  return results_.Get(index);
}
inline ::ImageResultMessage* ClassifyReply::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:ClassifyReply.results)
  return results_.Mutable(index);
}
inline ::ImageResultMessage* ClassifyReply::add_results() {
  // @@protoc_insertion_point(field_add:ClassifyReply.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ImageResultMessage >*
ClassifyReply::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:ClassifyReply.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ImageResultMessage >&
ClassifyReply::results() const {
  // @@protoc_insertion_point(field_list:ClassifyReply.results)
  return results_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PlatformInfoMessage_platformType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PlatformInfoMessage_platformType>() {
  return ::PlatformInfoMessage_platformType_descriptor();
}
template <> struct is_proto_enum< ::ClassifyRequest_operationMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ClassifyRequest_operationMode>() {
  return ::ClassifyRequest_operationMode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Communicator_2eproto__INCLUDED
